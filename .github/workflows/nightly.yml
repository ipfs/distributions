name: Nightly

on:
  workflow_dispatch:
    inputs:
      dist_root:
        description: 'DIST_ROOT'
        required: true
        default: '/ipns/dist.ipfs.io'
  schedule:
    - cron: '0 5 * * *' # UTC

env:
 DIST_ROOT: ${{ github.event.inputs.custom_dist_root || '/ipns/dist.ipfs.io' }} # content root used for calculating diff to build
 GO_IPFS_VER: 'v0.10.0'           # go-ipfs daemon used for chunking and applying diff
 CLUSTER_CTL_VER: 'v0.14.1'      # ipfs-cluster-ctl used for pinning

concurrency:
  group: nightly
  cancel-in-progress: true

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(jq -nc '$ARGS.positional' --args $(ls ./dists -1))"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build:
    runs-on: "ubuntu-latest"
    needs: prepare-matrix
    strategy:
      fail-fast: false
      matrix:
        dist_name: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - env:
          CLUSTER_USER: ${{ secrets.CLUSTER_USER }}
          CLUSTER_PASSWORD: ${{ secrets.CLUSTER_PASSWORD }}
        uses: ./.github/actions/setup-ipfs
        timeout-minutes: 5
      - run: cd ./dists/${{ matrix.dist_name }} && make nightly
      - run: ./dockerized make publish
      - name: Create issue if build failed
        uses: actions/github-script@v4
        if: ${{ failure() }}
        with:
          script: |
            const title = 'Nightly build failed for ${{ matrix.dist_name }}'
            const body = '${{ matrix.dist_name }} failed to build from the latest commit: https://github.com/ipfs/distributions/actions/runs/${{ github.run_id }}'
            const opts = { owner: context.repo.owner, repo: context.repo.repo }
            const response = await github.search.issuesAndPullRequests({
              q: `repo:ipfs/distributions is:issue is:open in:title ${title}`
            })
            console.log('github.issuesAndPullRequests', response)
            let link
            if (response.data.items.length === 0) {
              const created = await github.issues.create({ ...opts, title, body,
                labels: ['kind/bug', 'need/triage']
              })
              console.log('no open issues, created a new one', created)
              link = created.data.html_url
            }
            for (const issue of response.data.items) {
              if (issue.title !== title) continue
              console.log('found existing open issue', issue)
              const created = await github.issues.createComment({ ...opts,
                issue_number: issue.number,
                body
              })
              console.log('commented on existing open issue', created)
              link = created.data.html_url
            }
            await github.repos.createCommitStatus({ ...opts,
              sha: '${{ github.sha }}',
              state: 'error',
              target_url: link,
              context: 'Problem with ${{ matrix.dist_name }}',
              description: 'See details in the linked issue'
            })
      - name: Inspect git status and contents of ./releases
        run: git status && ls -Rhl ./releases
      - name: Read CID of updated DAG
        id: cid-reader
        run: echo "::set-output name=CID::$(tail -1 ./versions)"
      - name: Pin new website to ipfs-websites.collab.ipfscluster.io
        run: ./scripts/ci/pin-to-cluster.sh
        env:
          PIN_CID: ${{ steps.cid-reader.outputs.CID }}
          PIN_NAME: "ipfs/distributions/nightly/${{ matrix.dist_name }}"
          PIN_ADD_EXTRA_ARGS: "--expire-in 168h"
          CLUSTER_USER: ${{ secrets.CLUSTER_USER }}
          CLUSTER_PASSWORD: ${{ secrets.CLUSTER_PASSWORD }}
        timeout-minutes: 60
      - name: Update PR status with preview link
        run: ./scripts/ci/github-preview-link.sh
        env:
          GITHUB_TITLE: "Preview for ${{ matrix.dist_name }}"
          CONTENT_PATH: "/ipfs/${{ steps.cid-reader.outputs.CID }}/${{ matrix.dist_name }}"
          GIT_REVISION: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Close any open issues about broken build
        uses: actions/github-script@v4
        if: ${{ success() }}
        with:
          script: |
            const title = 'Nightly build failed for ${{ matrix.dist_name }}'
            const body = 'Fixed! ${{ matrix.dist_name }} got successfully built from the latest commit: https://github.com/ipfs/distributions/actions/runs/${{ github.run_id }}'
            const opts = { owner: context.repo.owner, repo: context.repo.repo }
            const response = await github.search.issuesAndPullRequests({
              q: `repo:ipfs/distributions is:issue is:open in:title ${title}`
            })
            console.log('github.issuesAndPullRequests', response)
            for (const issue of response.data.items) {
              if (issue.title !== title) continue
              console.log('found existing open issue', issue)
              const created = await github.issues.createComment({ ...opts,
                issue_number: issue.number,
                body
              })
              await github.issues.update({ ...opts,
                issue_number: issue.number,
                state: 'closed',
                assignees: []
              })
              console.log('commented and closed existing open issue', created)
            }
