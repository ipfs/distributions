name: Nightly

on:
  push:
  ## Allow manual invocation
  #workflow_dispatch:
  #schedule:
  #  - cron: '0 5 * * *' # UTC

env:
 DIST_ROOT: '/ipns/dist.ipfs.io' # content root used for calculating diff to build
 GO_IPFS_VER: 'v0.9.1'           # go-ipfs daemon used for chunking and applying diff
 CLUSTER_CTL_VER: 'v0.14.0'      # ipfs-cluster-ctl used for pinning

concurrency:
  group: nightly
  cancel-in-progress: true

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: set-matrix
        run: echo "::set-output name=matrix::$(jq -nc '$ARGS.positional' --args $(ls ./dists -1))"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build:
    runs-on: "ubuntu-latest"
    needs: prepare-matrix
    strategy:
      max-parallel: 4 # avoid using all workers from the pool
      fail-fast: false
      matrix:
        dist_name: ${{ fromJson(needs.prepare-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup IPFS
        run: ./scripts/ci/setup-ipfs.sh
        env:
          CLUSTER_USER: ${{ secrets.CLUSTER_USER }}
          CLUSTER_PASSWORD: ${{ secrets.CLUSTER_PASSWORD }}
        timeout-minutes: 5
      - run: cd ./dists/${{ matrix.dist_name }} && make nightly
      - run: ./dockerized make publish
      - name: Inspect git status and contents of ./releases
        run: git status && ls -Rhl ./releases
      - name: Read CID of updated DAG
        id: cid-reader
        run: echo "::set-output name=CID::$(tail -1 ./versions)"
      - name: Pin new website to ipfs-websites.collab.ipfscluster.io
        run: ./scripts/ci/pin-to-cluster.sh
        env:
          PIN_CID: ${{ steps.cid-reader.outputs.CID }}
          PIN_NAME: "ipfs/distributions/nightly/${{ matrix.dist_name }}"
          PIN_ADD_EXTRA_ARGS: "--expire-in 168h"
          CLUSTER_USER: ${{ secrets.CLUSTER_USER }}
          CLUSTER_PASSWORD: ${{ secrets.CLUSTER_PASSWORD }}
        timeout-minutes: 60
      - name: Update PR status with preview link
        run: ./scripts/ci/github-preview-link.sh
        env:
          GITHUB_TITLE: "Preview for ${{ matrix.dist_name }}"
          CONTENT_PATH: "/ipfs/${{ steps.cid-reader.outputs.CID }}/${{ matrix.dist_name }}"
          GIT_REVISION: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
