name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - fix/osx-notarization
  workflow_dispatch:
    inputs:
      dist_root:
        description: 'DIST_ROOT'
        required: true
        default: '/ipns/dist.ipfs.tech'

env:
 DIST_ROOT: ${{ github.event.inputs.custom_dist_root || '/ipns/dist.ipfs.tech' }} # content root used for calculating diff to build
 KUBO_VER: 'v0.27.0'       # kubo daemon used for chunking and applying diff
 CLUSTER_CTL_VER: 'v1.0.8' # ipfs-cluster-ctl used for pinning

jobs:
  build:
    runs-on: ${{ fromJSON(vars.CI_BUILD_RUNS_ON || '"ubuntu-latest"') }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '16'
      - env:
          CLUSTER_USER: ${{ secrets.CLUSTER_USER }}
          CLUSTER_PASSWORD: ${{ secrets.CLUSTER_PASSWORD }}
        uses: ./.github/actions/setup-ipfs
        timeout-minutes: 30
      - name: Build any new ./releases
        run: ./dockerized make all_dists
      - name: Inspect git status and contents of ./releases
        run: git status && ls -Rhl ./releases
      - name: Temporarily save ./releases artifacts
        uses: actions/upload-artifact@v3
        with:
          name: releases-unsigned-diff
          path: releases
          retention-days: 3

  lint:
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '16'
      - run: npm ci --no-audit --progress=false
      - run: npm run lint

  sign-macos:
    runs-on: "ubuntu-latest"
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Retrieve unsigned artifacts
        uses: actions/download-artifact@v3
        with:
          name: releases-unsigned-diff
          path: releases
        continue-on-error: true # skip if no releases
      - name: List ./releases before
        run: ls -Rhl ./releases || echo "No ./releases"
      - name: Kubo init
        run: ipfs init --profile test # needed for calculating NEW_CID later
      - name: Set up rcodesign rust tool for OSX code signing and app notarization
        run: |
          cargo install apple-codesign
      - name: Decode p12 file
        run: |
          echo -n "${{ secrets.APPLE_CERTS_P12 }}" | base64 --decode > ~/.apple-certs.p12
          echo -n "{{ secrets.APPLE_CERTS_PASS }}" > ~/.apple-certs-pass
          rcodesign encode-app-store-connect-api-key \
            "${{ secrets.APPLE_APIKEY_ISSUER_ID }}" \
            "${{ secrets.APPLE_APIKEY_ID }}" \
            "${{ secrets.APPLE_APIKEY_FILE }}" \
            > ~/.apple-api-key
      - name: Sign any new releases
        run: ./scripts/ci/sign-new-macos-releases.sh
        env:
          WORK_DIR: ${{ github.workspace }}
      - name: List ./releases after
        run: ls -Rhl ./releases || echo "No ./releases"
      - name: Temporarily save notarized artifacts
        uses: actions/upload-artifact@v3
        with:
          name: releases-signed-macos-diff
          path: releases
          retention-days: 3
        continue-on-error: true # skip if no releases
    post:
      - name: Cleanup secrets
        run: shred -u -z -n 10 ~/.apple-certs.p12 ~/.apple-certs-pass ~/.apple-api-key

  persist:
    runs-on: ${{ fromJSON(vars.CI_BUILD_RUNS_ON || '"ubuntu-latest"') }}
    needs: sign-macos
    environment: Deploy
    steps:
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '16'
      - uses: actions/checkout@v4
      - name: Retrieve signed artifacts
        uses: actions/download-artifact@v3
        continue-on-error: true # skip if no releases
        with:
          name: releases-signed-macos-diff
          path: releases
      - name: List ./releases
        run: ls -Rhl ./releases || echo "No ./releases"
      - env:
          CLUSTER_USER: ${{ secrets.CLUSTER_USER }}
          CLUSTER_PASSWORD: ${{ secrets.CLUSTER_PASSWORD }}
        uses: ./.github/actions/setup-ipfs
        timeout-minutes: 30
      - run: ./dockerized make publish
      - run: git status
      - name: Read CID of updated DAG
        id: cid-reader
        run: echo "CID=$(tail -1 ./versions)" >> $GITHUB_OUTPUT
      - name: Pin new website to ipfs-websites.collab.ipfscluster.io
        run: ./scripts/ci/pin-to-cluster.sh
        env:
          PIN_CID: ${{ steps.cid-reader.outputs.CID }}
          PIN_NAME: "https://github.com/ipfs/distributions/commits/${{ github.sha }}"
          PIN_ADD_EXTRA_ARGS: ""
          CLUSTER_USER: ${{ secrets.CLUSTER_USER }}
          CLUSTER_PASSWORD: ${{ secrets.CLUSTER_PASSWORD }}
        timeout-minutes: 60
      - name: Update PR status with preview link
        run: ./scripts/ci/github-preview-link.sh
        env:
          CONTENT_PATH: "/ipfs/${{ steps.cid-reader.outputs.CID }}/"
          GIT_REVISION: ${{ github.sha }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: ./dockerized make diff
        if: github.event_name == 'pull_request'
      - uses: actions/upload-artifact@v3
        if: github.event_name == 'pull_request'
        with:
          name: diff
          path: diff
      - uses: actions/setup-go@v4
        if: github.ref == 'refs/heads/master'
        with:
          go-version: "1.20.x"
      - name: Update _dnslink.dist.ipfs.tech (if on the main branch)
        if: github.ref == 'refs/heads/master'
        run: |
          go install github.com/ipfs/dnslink-dnsimple@v0.1.0
          dnslink-dnsimple --domain dist.ipfs.tech  --record _dnslink --link /ipfs/${{ steps.cid-reader.outputs.CID }}
        env:
          DNSIMPLE_TOKEN: ${{ secrets.DNSIMPLE_TOKEN }}

  diff:
    needs: persist
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: diff
      - name: Create comment with the diff
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs').promises
            const diff = await fs.readFile('diff', 'utf8')
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ github.event.number }},
              body: diff
            })
